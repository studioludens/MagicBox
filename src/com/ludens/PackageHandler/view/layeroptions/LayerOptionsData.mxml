<?xml version="1.0" encoding="utf-8"?>
<layeroptions:LayerOptionsBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
							   xmlns:s="library://ns.adobe.com/flex/spark" 
							   xmlns:mx="library://ns.adobe.com/flex/mx" 
							   xmlns:layeroptions="com.ludens.PackageHandler.view.layeroptions.*"
							   addedToStage="layeroptionsbase1_addedToStageHandler(event)" 
							   xmlns:view="com.ludens.PackageHandler.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.lorentz.SVG.SVGColor;
			import com.ludens.magicbox.model.layer.PathLayer;
			import com.ludens.utils.BooleanUtil;
			import com.ludens.utils.Debug;
			
			[Bindable] public var variableNames:Array;
			[Bindable] public var functionNames:Array;
			
			protected function layeroptionsbase1_addedToStageHandler(event:Event):void
			{
				_dataInputTimer.addEventListener(TimerEvent.TIMER, dataInputTimerHandler);
			}
			
			
			/**
			 * data input is timed, so we can stay responsive
			 */
			private var _dataInputTimer:Timer = new Timer( 300 );
			
			public function doDataInputChange():void {
				// reset timer
				_dataInputTimer.reset();
				_dataInputTimer.start();
				
			}
			
			public function dataInputTimerHandler(e:TimerEvent):void {
				Debug.print( "Data Input timed commit", this );
				
				data.d = dataInput.text; 
				doChange(); 
				doSaveRequest();
				// reset the timer
				_dataInputTimer.stop();
			}
			
			
			
			private function dataInputClickHandler( e:Event ):void {
				
				//trace( "[LayerOptions] selection: " );
				//trace( dataInput.selectionBeginIndex );
				//trace( dataInput.selectionEndIndex );
				/*
				if( oldCaretIndex != dataInput.selectionBeginIndex )
				dispatchEvent( new PathSelectionEvent( PathSelectionEvent.CARET_CHANGED ) );
				*/
				dataInput.doHighlight();
			}

			

		]]>
	</fx:Script>
	
	<mx:CheckBox id="dataLabel" 
				 selected="{ !data.staticData }"
				 change="{ data.staticData = (dataLabel.selected ? false : true); doChange() }" 
				 label="data" labelPlacement="right" fontWeight="bold"
				 toolTip="if checked the data will not be parsed. Use to increase drawing speed on static elements"/>
	<!--<mx:Label text="data" fontWeight="bold"  paddingLeft="16" id="dataLabel"/>-->
	<view:HighlightTextArea id="dataInput" 
							text="{ data.d }" 
							change="{ doDataInputChange() }"
							styleName="codeTextStyle"
							parametersHighlight="{variableNames}"
							functionsHighlight="{functionNames}"
							click="dataInputClickHandler(event)"  left="0" right="0" top="24" bottom="0"/>
	
	
</layeroptions:LayerOptionsBase>
